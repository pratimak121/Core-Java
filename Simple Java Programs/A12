/*  
Write a program to calculate perimeter and area of rectangle. 
(hint : area = length * breadth , perimeter=2*(length+breadth)) 
*/

import java.util.Scanner;
public class A12
{
  double l,b;
  public A12(double len,double bread)
  {
    this.l = len;
    this.b = bread;
  }
  double CalculateArea()
  {
   return l * b;
  }
   double CalculatePerimeter()
  {
   return 2 * (l + b);
  }
    public static void main(String[] args)
    {
      A12 a = new A12(10,20);
      Scanner sc = new Scanner(System.in);
      System.out.println("Enter length and breadth values :");
      double l = sc.nextDouble();
      double b = sc.nextDouble();
      A12 a1 = new A12(l,b);
      System.out.println("Area of rectangle : " +a.CalculateArea());
      System.out.println("Perimeter of rectangle :"+ a.CalculatePerimeter());
      System.out.println("Area of rectangle : " +a1.CalculateArea());
      System.out.println("Perimeter of rectangle :"+ a1.CalculatePerimeter());

    }
}
     
An instance variable in Java is a variable that is declared inside a class but outside any method, constructor, or block.
Each object (instance) of the class has its own copy of the instance variables.
/*
Why use this?
The this keyword refers to the current object instance. It's especially useful when the method or constructor parameter has the same name as the instance variable. 
Without this, Java would not know whether you're referring to the parameter or the instance variable.
*/
